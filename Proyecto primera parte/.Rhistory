?ca.jo
#Para comprobar que las series son I(1) se comprobará que sean estacionarias. (Como ya se ha visto en puntos anteriores son estacionarias cuando se realizan primeras diferencias)
adf.test(lgnp)
adf.test(lm1s)
adf.test(gs10)
adf.test(tb3m)
#________________________
adf.test(dlgnp)
adf.test(dlm1s)
adf.test(dgs10)
adf.test(dtb3m)
#Impulsos de dlgnp
irfr_m1s_nc = irf(m1VAR, impulse = "dlgnp", response = "dlm1s",  n.ahead = 12)
ca.jo(m1VAR)
tipos <- data.frame(dlm1s,dlgnp,dtb3m,dgs10)
ord_VAR<-VARselect(tipos,lag.max=24, type="both")
ord_VAR
res_cot<-ca.jo(tipos,type="trace",ecdet="trend",K=5)
res_coc<-ca.jo(tipos,type="trace",ecdet="const",K=5)
res_co <-ca.jo(tipos,type="trace",ecdet="none",K=5)
summary(res_coc)
#Calculo de los no correlacionados
#Impulsos de dlm1s
irfr_m1s_nc = irf(m1VAR, impulse = "dlm1s", response = "dlm1s",  n.ahead = 12)
irfr_m1s_gnp_nc = irf(m1VAR, impulse = "dlm1s", response = "dlgnp",  n.ahead = 12)
irfr_m1s_tb3m_nc = irf(m1VAR, impulse = "dlm1s", response = "dtb3m",  n.ahead = 12)
irfr_m1s_gs10_nc = irf(m1VAR, impulse = "dlm1s", response = "dgs10",  n.ahead = 12)
#Impulsos de dlgnp
irfr_gnp_m1s_nc = irf(m1VAR, impulse = "dlgnp", response = "dlm1s",  n.ahead = 12)
irfr_gnp_nc = irf(m1VAR, impulse = "dlgnp", response = "dlgnp",  n.ahead = 12)
irfr_gnp_tb3m_nc = irf(m1VAR, impulse = "dlgnp", response = "dtb3m",  n.ahead = 12)
irfr_gnp_gs10_nc = irf(m1VAR, impulse = "dlgnp", response = "dgs10",  n.ahead = 12)
#Impulsos de dtb3m
irfr_tb3m_m1s_nc = irf(m1VAR, impulse = "dtb3m", response = "dlm1s",  n.ahead = 12)
irfr_tb3m_gnp_nc = irf(m1VAR, impulse = "dtb3m", response = "dlgnp",  n.ahead = 12)
irfr_tb3m_nc = irf(m1VAR, impulse = "dtb3m", response = "dtb3m",  n.ahead = 12)
irfr_tb3m_gs10_nc = irf(m1VAR, impulse = "dtb3m", response = "dgs10",  n.ahead = 12)
#Impulsos de dgs10
irfr_gs10_m1s_nc = irf(m1VAR, impulse = "dgs10", response = "dlm1s",  n.ahead = 12)
irfr_gs10_gnp_nc = irf(m1VAR, impulse = "dgs10", response = "dlgnp",  n.ahead = 12)
irfr_gs10_tb3m_nc = irf(m1VAR, impulse = "dgs10", response = "dtb3m",  n.ahead = 12)
irfr_gs10_nc = irf(m1VAR, impulse = "dgs10", response = "dgs10",  n.ahead = 12)
#Calculo de los correlacionados
#Impulsos de dlm1s
irfr_m1s = irf(m1VAR, impulse = "dlm1s", response = "dlm1s",  n.ahead = 12, ortho = F)
irfr_m1s_gnp = irf(m1VAR, impulse = "dlm1s", response = "dlgnp",  n.ahead = 12, ortho = F)
irfr_m1s_tb3m = irf(m1VAR, impulse = "dlm1s", response = "dtb3m",  n.ahead = 12, ortho = F)
irfr_m1s_gs10 = irf(m1VAR, impulse = "dlm1s", response = "dgs10",  n.ahead = 12, ortho = F)
#Impulsos de dlgnp
irfr_gnp_m1s = irf(m1VAR, impulse = "dlgnp", response = "dlm1s",  n.ahead = 12, ortho = F)
irfr_gnp = irf(m1VAR, impulse = "dlgnp", response = "dlgnp",  n.ahead = 12, ortho = F)
irfr_gnp_tb3m = irf(m1VAR, impulse = "dlgnp", response = "dtb3m",  n.ahead = 12, ortho = F)
irfr_gnp_gs10 = irf(m1VAR, impulse = "dlgnp", response = "dgs10",  n.ahead = 12, ortho = F)
#Impulsos de dtb3m
irfr_tb3m_m1s = irf(m1VAR, impulse = "dtb3m", response = "dlm1s",  n.ahead = 12, ortho = F)
irfr_tb3m_gnp = irf(m1VAR, impulse = "dtb3m", response = "dlgnp",  n.ahead = 12, ortho = F)
irfr_tb3m = irf(m1VAR, impulse = "dtb3m", response = "dtb3m",  n.ahead = 12, ortho = F)
irfr_tb3m_gs10 = irf(m1VAR, impulse = "dtb3m", response = "dgs10",  n.ahead = 12, ortho = F)
#Impulsos de dgs10
irfr_gs10_m1s = irf(m1VAR, impulse = "dgs10", response = "dlm1s",  n.ahead = 12, ortho = F)
irfr_gs10_gnp = irf(m1VAR, impulse = "dgs10", response = "dlgnp",  n.ahead = 12, ortho = F)
irfr_gs10_tb3m = irf(m1VAR, impulse = "dgs10", response = "dtb3m",  n.ahead = 12, ortho = F)
irfr_gs10 = irf(m1VAR, impulse = "dgs10", response = "dgs10",  n.ahead = 12, ortho = F)
par(mfrow=c(4,1))
#Gráficos m1s no correlacionados
plot(irfr_m1s_nc);plot(irfr_m1s_gnp_nc);plot(irfr_m1s_tb3m_nc);plot(irfr_m1s_gs10_nc)
#Gráficos m1s correlacionados
plot(irfr_m1s);plot(irfr_m1s_gnp);plot(irfr_m1s_tb3m);plot(irfr_m1s_gs10)
#Gráficos gnp no correlacionados
plot(irfr_gnp_m1s_nc);plot(irfr_gnp_nc);plot(irfr_gnp_tb3m_nc);plot(irfr_gnp_gs10_nc)
#Gráficos gnp correlacionados
plot(irfr_gnp_m1s);plot(irfr_gnp);plot(irfr_gnp_tb3m);plot(irfr_gnp_gs10)
#Gráficos tb3m no correlacionados
plot(irfr_tb3m_m1s_nc);plot(irfr_tb3m_gnp_nc);plot(irfr_tb3m_nc);plot(irfr_tb3m_gs10_nc)
#Gráficos tb3m correlacionados
plot(irfr_tb3m_m1s);plot(irfr_tb3m_gnp);plot(irfr_tb3m);plot(irfr_tb3m_gs10)
#Gráficos gs10 no correlacionados
plot(irfr_gs10_m1s_nc);plot(irfr_gs10_gnp_nc);plot(irfr_gs10_tb3m_nc);plot(irfr_gs10_nc)
#Gráficos gs10 correlacionados
plot(irfr_gs10_m1s);plot(irfr_gs10_gnp);plot(irfr_gs10_tb3m);plot(irfr_gs10)
par(mfrow=c(4,1))
plot(irfr_m1s_nc);plot(irfr_m1s_gnp_nc);plot(irfr_m1s_tb3m_nc);plot(irfr_m1s_gs10_nc)
par(mfrow=c(4,1))
par(mfrow=c(2,1))
#Gráficos m1s no correlacionados
plot(irfr_m1s_nc);plot(irfr_m1s_gnp_nc);plot(irfr_m1s_tb3m_nc);plot(irfr_m1s_gs10_nc)
par(mfrow=c(2,1))
plot(irfr_m1s_nc)
plot(irfr_m1s_gnp_nc)
par(mfrow=c(1,2))
plot(irfr_m1s_nc)
plot(irfr_m1s_gnp_nc)
par(mfrow=c(1,2))
plot(irfr_m1s_nc)
plot(irfr_m1s_gnp_nc)
par(mfrow=c(1,2))
ts.plot(irfr_m1s_nc)
ts.plot(irfr_m1s_gnp_nc)
par(mfrow=c(1,2))
plot(irfr_m1s_nc)
plot(irfr_m1s_gnp_nc)
?layout
layout(plot(irfr_m1s_nc))
layout(plot(irfr_m1s_nc),plot(irfr_m1s_gnp_nc))
par(mfrow=c(1,2))
plot(irfr_m1s_nc)
plot(irfr_m1s_gnp_nc)
par(mfrow=c(1,2))
plot(irfr_m1s_nc)
plot(irfr_m1s_gnp_nc)
#Calculo de los no correlacionados
#Impulsos de dlm1s
irfr_m1s_nc = irf(m1VAR, impulse = "dlm1s", response = "dlm1s",  n.ahead = 12)
irfr_m1s_gnp_nc = irf(m1VAR, impulse = "dlm1s", response = "dlgnp",  n.ahead = 12)
irfr_m1s_tb3m_nc = irf(m1VAR, impulse = "dlm1s", response = "dtb3m",  n.ahead = 12)
plot(irfr_m1s_nc);plot(irfr_m1s_gnp_nc);plot(irfr_m1s_tb3m_nc);plot(irfr_m1s_gs10_nc)
#Gráficos m1s correlacionados
plot(irfr_m1s);plot(irfr_m1s_gnp);plot(irfr_m1s_tb3m);plot(irfr_m1s_gs10)
#Gráficos gnp no correlacionados
plot(irfr_gnp_m1s_nc);plot(irfr_gnp_nc);plot(irfr_gnp_tb3m_nc);plot(irfr_gnp_gs10_nc)
#Gráficos gnp correlacionados
plot(irfr_gnp_m1s);plot(irfr_gnp);plot(irfr_gnp_tb3m);plot(irfr_gnp_gs10)
#Gráficos tb3m no correlacionados
plot(irfr_tb3m_m1s_nc);plot(irfr_tb3m_gnp_nc);plot(irfr_tb3m_nc);plot(irfr_tb3m_gs10_nc)
#Gráficos tb3m correlacionados
plot(irfr_tb3m_m1s);plot(irfr_tb3m_gnp);plot(irfr_tb3m);plot(irfr_tb3m_gs10)
#Gráficos gs10 no correlacionados
plot(irfr_gs10_m1s_nc);plot(irfr_gs10_gnp_nc);plot(irfr_gs10_tb3m_nc);plot(irfr_gs10_nc)
#Gráficos gs10 correlacionados
plot(irfr_gs10_m1s);plot(irfr_gs10_gnp);plot(irfr_gs10_tb3m);plot(irfr_gs10)
?plot
?par
#Gráfico m1s y gnp no correlacionados
plot(irfr_m1s_gnp_nc)
#Gráficos m1s y gnp correlacionados
plot(irfr_m1s_gnp)
#Gráficos gnp y gs10 no correlacionados
plot(irfr_gnp_gs10_nc)
#Gráficos gnp y gs10 correlacionados
plot(irfr_gnp_gs10)
#Gráficos tb3m y m1s no correlacionados
plot(irfr_tb3m_m1s_nc)
#Gráficos tb3m y m1s correlacionados
plot(irfr_tb3m_m1s)
#Gráficos gs10 consigo mismo no correlacionados
plot(irfr_gs10_nc)
#Gráficos gs10 consigo mismo correlacionados
plot(irfr_gs10)
?ca.jo
summary(res_co)
tipos <- data.frame(lm1s,lgnp,tb3m,gs10)
ord_VAR<-VARselect(tipos,lag.max=24, type="both")
ord_VAR
res_cot<-ca.jo(tipos,type="trace",ecdet="trend",K=5)
res_coc<-ca.jo(tipos,type="trace",ecdet="const",K=5)
res_co <-ca.jo(tipos,type="trace",ecdet="none",K=5)
summary(res_co)
tipos <- data.frame(lm1s,lgnp,tb3m,gs10)
ord_VAR<-VARselect(tipos,lag.max=24, type="both")
ord_VAR
res_cot<-ca.jo(tipos,type="trace",ecdet="trend",K=6)
res_coc<-ca.jo(tipos,type="trace",ecdet="const",K=6)
res_co <-ca.jo(tipos,type="trace",ecdet="none",K=6)
summary(res_cot)
rm(list=ls(all=TRUE))
set.seed(123)
library(tseries)
library(urca)
library(vars)
load('tipos.Rdata')
load('tipos.Rdata')
t1<-tipos_interes[,1]
t3<-tipos_interes[,2]
t6<-tipos_interes[,3]
t12<-tipos_interes[,4]
t1<-ts(data=t1,start=c(1994,1),frequency=12)
t3<-ts(data=t3,start=c(1994,1),frequency=12)
t6<-ts(data=t6,start=c(1994,1),frequency=12)
t12<-ts(data=t12,start=c(1994,1),frequency=12)
ts.plot(t1,t3,t6,t12,col=1:4)
## confirm individual non-stationarity
adf.test(t1)
adf.test(t3)
adf.test(t6)
adf.test(t12)
## test VAR order
tipos <- data.frame(t1,t3,t6,t12)
ord_VAR<-VARselect(tipos,lag.max=24, type="both")
ord_VAR
res_cot<-ca.jo(tipos,type="trace",ecdet="trend",K=5)
res_coc<-ca.jo(tipos,type="trace",ecdet="const",K=5)
res_co <-ca.jo(tipos,type="trace",ecdet="none",K=5)
summary(res_coc)
wt1 = t1 -4.34599310*t3+5.68321169*t6-2.32058216*t12+0.08637121
wt2 = t1 -2.0966396*t3+0.4589705*t6+0.6495294*t12-0.1386264
plot(wt1,type='l')
lines(wt2,col=2)
adf.test(wt1)
adf.test(wt2)
# re-estimate with selected r
rdos_nor<-cajorls(res_coc,r=2)
?cajorls
## VECM form
summary(rdos_nor$rlm)
## normalized cointegrating relationship
rdos_nor$beta
## residuals
res = rdos_nor$rlm$residuals
par(mfrow=c(2,2))
class(rdos_nor)
summary(res_coc)
set.seed(1)
library(aTSA)
library(stats)
library(tseries)
library(vars)
load("us_1960_2018.Rdata")
#Se muestra un gráfico de niveles
plot(lgnp,type='l',lwd=2)
#Se calculan las diferencias y se muestran tres gráficos, el gráfico de las diferencias, el gráfico con ACF y por último con PACF
dlgnp = diff(lgnp)
par(mfrow=c(1,3))
plot(dlgnp,type='l')
acf(dlgnp)
pacf(dlgnp)
#Se comprueba si son estacionarias mediante el uso del "Augmented Dickey-Fuller Test".
DFt_lgnp = adf.test(lgnp, alternative = c("stationary"), k = trunc((length(lgnp)-1)^(1/3)))
DFt_dlgnp = adf.test(dlgnp, alternative = c("stationary"), k = trunc((length(dlgnp)-1)^(1/3)))
DFt_lgnp
DFt_dlgnp
#Aunque se presuponga por los gráficos anteriores que la mejor opción sería un ARMA(2,0) se comprobarán 4 casos distintos.
m1 = arima(dlgnp, order = c(1, 0,0),include.mean = TRUE)
m2 = arima(dlgnp, order = c(2, 0,0),include.mean = TRUE)
m3 = arima(dlgnp, order = c(0, 0,1),include.mean = TRUE)
m4 = arima(dlgnp, order = c(0, 0,2),include.mean = TRUE)
m1
m2
m3
m4
#Se analizan los residuos del modelo elegido en 3.
par(mfrow=c(1,2))
ts.plot(m2$residuals)
pacf(m2$residuals)
#Se realiza un análisis de normalidad, inicialmente mediante un gráfico que mostrará la distribución de los residuos en formato de histograma.
grid = seq(-4,4,length=500)
hist(m2$residuals/sqrt(m2$sigma2),freq=FALSE)
lines(grid,dnorm(grid), col = "red")
#En segundo lugar se analiza la normalidad mediante el análisis de la asimetría de los residuos.
ks.test(m2$residuals/sqrt(m2$sigma2),dnorm)
#Ahora se pasa a analizar la autocorrelación del modelo mediante el "Ljung-Box Test"
Box.test(m2$residuals, lag = 8, type = c("Ljung-Box"))
Box.test(m2$residuals, lag = 16, type = c("Ljung-Box"))
Box.test(m2$residuals, lag = 24, type = c("Ljung-Box"))
#Se analizan los efectos ARCH
arch1 = aTSA::arch.test(m2, output = F)
arch1
#Se realiza la predicción del crecimiento del PIB en porcentaje y logaritmo para 2019Q4
T = length(lgnp)
pm = predict(m2, n.ahead = 4, newxreg = NULL,
se.fit = TRUE)
#Se calcula
p4_lev = pm$pred[4]+lgnp[T]
#Se genera el gráfico para mostrar cual es la predicción en 2019Q4
par(mfrow=c(1,1))
plot(c(lgnp),type='l',lwd=2,xlim=c(0,T+5),
ylim=c(min(lgnp),1.2*max(lgnp)))
points(x = T+4, y = p4_lev,col=2,pch=20)
#Se generan los gráficos para la inspección.
par(mfrow=c(1,4))
ts.plot(lgnp,main='lgnp');ts.plot(lm1s,main='lm1s');ts.plot(gs10,main='gs10');ts.plot(tb3m,main='tb3m')
#En segundo lugar se realizan los contrastes mediante "Augmented Dickey-Fuller Test" en las cuatro series en sus niveles.
lapply(list(lgnp,lm1s,gs10,tb3m),adf.test)
#Se procede ahora a calcular las primeras diferencias para repetir el análisis. La diferencia de lgnp ya está calculada, por lo tanto la omitiré.
dlm1s = diff(lm1s)
dgs10  = diff(gs10)
dtb3m = diff(tb3m)
#Se realizan ahora la inspección gráfica, los contrastes ACF, PACF y "Augmented Dickey-Fuller Test" sobre las diferencias.
par(mfrow=c(1,4))
#Se generan los gráficos de las series diferenciadas.
ts.plot(dlgnp,main='dlgnp');ts.plot(dlm1s,main='dlm1s');ts.plot(dgs10,main='dgs10');ts.plot(dtb3m,main='dtb3m')
#ACF y PACF
acf(dlgnp);acf(dlm1s);acf(dgs10);acf(dtb3m)
pacf(dlgnp);pacf(dlm1s);pacf(dgs10);pacf(dtb3m)
#Augmented Dickey-Fuller Test para las series diferenciadas y así confirmar que sean estacionarias.
lapply(list(dlgnp,dlm1s,dgs10,dtb3m),adf.test)
#Se crea la matriz con el orden que en teoría desde mi punto de vista tiene sentido económico.
#Aunque en este caso no quede claro que serie genera un efecto sobre otra, desde mi punto de vista el stock de dinero afecta al PIB, ya que la disponibilidad de dinero es una política expansiva que tiene un efecto de crecimiento sobre el PIB y de ahí deduzco que este orden sería el correcto. Por otro lado, las variaciones del PIB afectan a la confianza crediticia del pais, y esto se ve reflejado sobre los tipos de interes. Como el típo de interés más volatil es el del corto plazo primero se vería afectada la tasa a 3 meses, y posteriormente la tasa a 10 años.
vardat = matrix(cbind(dlm1s,dlgnp,dtb3m,dgs10),nrow=length(dlm1s),ncol=4)
colnames(vardat) = c("dlm1s","dlgnp","dtb3m","dgs10")
#Se genera la serie temporal conjunta.
var_dat = ts(vardat,start=c(1960, 1), frequency=4)
#Mediante el comando VARselect nos guiamos para seleccionar el orden óptimo.
var.ord = VARselect(var_dat, lag.max = 12, type="const", season=4)
var.ord
m1VAR = VAR(var_dat,p=var.ord$selection[1],type = "const", season=4)
#Se comprueba si el VAR estimado es estacionario mediante la observación de los valores propios. Esto se consigue mediante el comando roots.
roots = roots(m1VAR)
roots
#Se procede ahora al análisis de la normalidad mediante el uso del test de Jarque-Bera, analizando la curtosis y asimetría.
normality.test(m1VAR)
#En segundo lugar se realiza el análisis de autocorrelación.
serial.test(m1VAR,lags.pt=12,type="PT.adjusted")
serial.test(m1VAR,lags.bg = 5,type="ES")
#Se procede ahora a realizar el análisis de los efectos ARCH.
arch = vars::arch.test(m1VAR)
arch
#Calculo de los no correlacionados
#Impulsos de dlm1s
irfr_m1s_nc = irf(m1VAR, impulse = "dlm1s", response = "dlm1s",  n.ahead = 12)
irfr_m1s_gnp_nc = irf(m1VAR, impulse = "dlm1s", response = "dlgnp",  n.ahead = 12)
irfr_m1s_tb3m_nc = irf(m1VAR, impulse = "dlm1s", response = "dtb3m",  n.ahead = 12)
irfr_m1s_gs10_nc = irf(m1VAR, impulse = "dlm1s", response = "dgs10",  n.ahead = 12)
#Impulsos de dlgnp
irfr_gnp_m1s_nc = irf(m1VAR, impulse = "dlgnp", response = "dlm1s",  n.ahead = 12)
irfr_gnp_nc = irf(m1VAR, impulse = "dlgnp", response = "dlgnp",  n.ahead = 12)
irfr_gnp_tb3m_nc = irf(m1VAR, impulse = "dlgnp", response = "dtb3m",  n.ahead = 12)
irfr_gnp_gs10_nc = irf(m1VAR, impulse = "dlgnp", response = "dgs10",  n.ahead = 12)
#Impulsos de dtb3m
irfr_tb3m_m1s_nc = irf(m1VAR, impulse = "dtb3m", response = "dlm1s",  n.ahead = 12)
irfr_tb3m_gnp_nc = irf(m1VAR, impulse = "dtb3m", response = "dlgnp",  n.ahead = 12)
irfr_tb3m_nc = irf(m1VAR, impulse = "dtb3m", response = "dtb3m",  n.ahead = 12)
irfr_tb3m_gs10_nc = irf(m1VAR, impulse = "dtb3m", response = "dgs10",  n.ahead = 12)
#Impulsos de dgs10
irfr_gs10_m1s_nc = irf(m1VAR, impulse = "dgs10", response = "dlm1s",  n.ahead = 12)
irfr_gs10_gnp_nc = irf(m1VAR, impulse = "dgs10", response = "dlgnp",  n.ahead = 12)
irfr_gs10_tb3m_nc = irf(m1VAR, impulse = "dgs10", response = "dtb3m",  n.ahead = 12)
irfr_gs10_nc = irf(m1VAR, impulse = "dgs10", response = "dgs10",  n.ahead = 12)
#Calculo de los correlacionados
#Impulsos de dlm1s
irfr_m1s = irf(m1VAR, impulse = "dlm1s", response = "dlm1s",  n.ahead = 12, ortho = F)
irfr_m1s_gnp = irf(m1VAR, impulse = "dlm1s", response = "dlgnp",  n.ahead = 12, ortho = F)
irfr_m1s_tb3m = irf(m1VAR, impulse = "dlm1s", response = "dtb3m",  n.ahead = 12, ortho = F)
irfr_m1s_gs10 = irf(m1VAR, impulse = "dlm1s", response = "dgs10",  n.ahead = 12, ortho = F)
#Impulsos de dlgnp
irfr_gnp_m1s = irf(m1VAR, impulse = "dlgnp", response = "dlm1s",  n.ahead = 12, ortho = F)
irfr_gnp = irf(m1VAR, impulse = "dlgnp", response = "dlgnp",  n.ahead = 12, ortho = F)
irfr_gnp_tb3m = irf(m1VAR, impulse = "dlgnp", response = "dtb3m",  n.ahead = 12, ortho = F)
irfr_gnp_gs10 = irf(m1VAR, impulse = "dlgnp", response = "dgs10",  n.ahead = 12, ortho = F)
#Impulsos de dtb3m
irfr_tb3m_m1s = irf(m1VAR, impulse = "dtb3m", response = "dlm1s",  n.ahead = 12, ortho = F)
irfr_tb3m_gnp = irf(m1VAR, impulse = "dtb3m", response = "dlgnp",  n.ahead = 12, ortho = F)
irfr_tb3m = irf(m1VAR, impulse = "dtb3m", response = "dtb3m",  n.ahead = 12, ortho = F)
irfr_tb3m_gs10 = irf(m1VAR, impulse = "dtb3m", response = "dgs10",  n.ahead = 12, ortho = F)
#Impulsos de dgs10
irfr_gs10_m1s = irf(m1VAR, impulse = "dgs10", response = "dlm1s",  n.ahead = 12, ortho = F)
irfr_gs10_gnp = irf(m1VAR, impulse = "dgs10", response = "dlgnp",  n.ahead = 12, ortho = F)
irfr_gs10_tb3m = irf(m1VAR, impulse = "dgs10", response = "dtb3m",  n.ahead = 12, ortho = F)
irfr_gs10 = irf(m1VAR, impulse = "dgs10", response = "dgs10",  n.ahead = 12, ortho = F)
#Gráfico m1s y gnp no correlacionados
plot(irfr_m1s_gnp_nc)
#Gráficos m1s y gnp correlacionados
plot(irfr_m1s_gnp)
#Gráficos gnp y gs10 no correlacionados
plot(irfr_gnp_gs10_nc)
#Gráficos gnp y gs10 correlacionados
plot(irfr_gnp_gs10)
#Gráficos tb3m y m1s no correlacionados
plot(irfr_tb3m_m1s_nc)
#Gráficos tb3m y m1s correlacionados
plot(irfr_tb3m_m1s)
#Gráficos gs10 consigo mismo no correlacionados
plot(irfr_gs10_nc)
#Gráficos gs10 consigo mismo correlacionados
plot(irfr_gs10)
#Para comprobar que las series son I(1) se comprobará que sean estacionarias. (Como ya se ha visto en puntos anteriores son estacionarias cuando se realizan primeras diferencias)
adf.test(lgnp)
adf.test(lm1s)
adf.test(gs10)
adf.test(tb3m)
#________________________
adf.test(dlgnp)
adf.test(dlm1s)
adf.test(dgs10)
adf.test(dtb3m)
tipos <- data.frame(lm1s,lgnp,tb3m,gs10)
ord_VAR<-VARselect(tipos,lag.max=24, type="both")
ord_VAR
res_cot<-ca.jo(tipos,type="trace",ecdet="trend",K=6)
res_coc<-ca.jo(tipos,type="trace",ecdet="const",K=6)
res_co <-ca.jo(tipos,type="trace",ecdet="none",K=6)
summary(res_coc)
summary(res_cot)
ord_VAR
ord_VAR$selection
ord_VAR$selection[1]
res_cot<-ca.jo(tipos,type="trace",ecdet="trend",K=ord_VAR$selection[1])
res_coc<-ca.jo(tipos,type="trace",ecdet="const",K=ord_VAR$selection[1])
res_co <-ca.jo(tipos,type="trace",ecdet="none",K=ord_VAR$selection[1])
summary(res_co)
summary(res_coc)
?ca.jo
jo_tra<-ca.jo(tipos,type="trace",ecdet="const",K=ord_VAR$selection[1])
jo_eig<-ca.jo(tipos,type="eigen",ecdet="const",K=ord_VAR$selection[1])
summary(jo_tra)
summary(jo_eig)
wt1 = lm1s - 2.6516303*lgnp + 0.4725777*tb3m - 0.4486338*gs10 + 20.7612740
wt2 = lm1s - 4.111305*lgnp - 2.012733*tb3m + 1.914019*gs10 + 31.817292
plot(wt1,type='l')
lines(wt2,col=2)
adf.test(wt1)
adf.test(wt2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = F)
set.seed(1)
library(aTSA)
library(stats)
library(tseries)
library(vars)
?vec2var
vec2var(jo_eig, r = 2)
var_r2 = vec2var(jo_eig, r = 2)
var_r2
var_r2 = vec2var(jo_eig, r = 2)
#Impulsos de dlm1s
irfr_m1s_r2 = irf(var_r2, impulse = "lm1s", response = "lm1s",  n.ahead = 12, ortho = F)
irfr_m1s_gnp_r2 = irf(var_r2, impulse = "lm1s", response = "lgnp",  n.ahead = 12, ortho = F)
irfr_m1s_tb3m_r2 = irf(var_r2, impulse = "lm1s", response = "tb3m",  n.ahead = 12, ortho = F)
irfr_m1s_gs10_r2 = irf(var_r2, impulse = "lm1s", response = "gs10",  n.ahead = 12, ortho = F)
#Impulsos de dlgnp
irfr_gnp_m1s_r2 = irf(var_r2, impulse = "lgnp", response = "lm1s",  n.ahead = 12, ortho = F)
irfr_gnp_r2 = irf(var_r2, impulse = "lgnp", response = "lgnp",  n.ahead = 12, ortho = F)
irfr_gnp_tb3m_r2 = irf(var_r2, impulse = "lgnp", response = "tb3m",  n.ahead = 12, ortho = F)
irfr_gnp_gs10_r2 = irf(var_r2, impulse = "lgnp", response = "gs10",  n.ahead = 12, ortho = F)
#Impulsos de dtb3m
irfr_tb3m_m1s_r2 = irf(var_r2, impulse = "tb3m", response = "lm1s",  n.ahead = 12, ortho = F)
irfr_tb3m_gnp_r2 = irf(var_r2, impulse = "tb3m", response = "lgnp",  n.ahead = 12, ortho = F)
irfr_tb3m_r2 = irf(var_r2, impulse = "tb3m", response = "tb3m",  n.ahead = 12, ortho = F)
irfr_tb3m_gs10_r2 = irf(var_r2, impulse = "tb3m", response = "gs10",  n.ahead = 12, ortho = F)
#Impulsos de dgs10
irfr_gs10_m1s_r2 = irf(var_r2, impulse = "gs10", response = "lm1s",  n.ahead = 12, ortho = F)
irfr_gs10_gnp_r2 = irf(var_r2, impulse = "gs10", response = "lgnp",  n.ahead = 12, ortho = F)
irfr_gs10_tb3m_r2 = irf(var_r2, impulse = "gs10", response = "tb3m",  n.ahead = 12, ortho = F)
irfr_gs10_r2 = irf(var_r2, impulse = "gs10", response = "gs10",  n.ahead = 12, ortho = F)
plot(irfr_m1s_r2)
plot(irfr_m1s_r2)
plot(irfr_m1s_gnp_r2)
plot(irfr_m1s_tb3m_r2)
plot(irfr_m1s_gs10_r2)
plot(irfr_gnp_m1s_r2)
plot(irfr_gnp_r2)
plot(irfr_gnp_tb3m_r2)
plot(irfr_gnp_gs10_r2)
plot(irfr_tb3m_m1s_r2)
plot(irfr_tb3m_gnp_r2)
plot(irfr_tb3m_r2)
plot(irfr_tb3m_gs10_r2)
plot(irfr_tb3m_gs10_r2)
plot(irfr_tb3m_gs10_r2)
var_r2 = vec2var(jo_eig, r = 2)
#Impulsos de dlm1s
irfr_m1s_r2 = irf(var_r2, impulse = "lm1s", response = "lm1s",  n.ahead = 12, ortho = F)
irfr_m1s_gnp_r2 = irf(var_r2, impulse = "lm1s", response = "lgnp",  n.ahead = 12, ortho = F)
irfr_m1s_tb3m_r2 = irf(var_r2, impulse = "lm1s", response = "tb3m",  n.ahead = 12, ortho = F)
irfr_m1s_gs10_r2 = irf(var_r2, impulse = "lm1s", response = "gs10",  n.ahead = 12, ortho = F)
#Impulsos de dlgnp
irfr_gnp_m1s_r2 = irf(var_r2, impulse = "lgnp", response = "lm1s",  n.ahead = 12, ortho = F)
irfr_gnp_r2 = irf(var_r2, impulse = "lgnp", response = "lgnp",  n.ahead = 12, ortho = F)
irfr_gnp_tb3m_r2 = irf(var_r2, impulse = "lgnp", response = "tb3m",  n.ahead = 12, ortho = F)
irfr_gnp_gs10_r2 = irf(var_r2, impulse = "lgnp", response = "gs10",  n.ahead = 12, ortho = F)
#Impulsos de dtb3m
irfr_tb3m_m1s_r2 = irf(var_r2, impulse = "tb3m", response = "lm1s",  n.ahead = 12, ortho = F)
irfr_tb3m_gnp_r2 = irf(var_r2, impulse = "tb3m", response = "lgnp",  n.ahead = 12, ortho = F)
irfr_tb3m_r2 = irf(var_r2, impulse = "tb3m", response = "tb3m",  n.ahead = 12, ortho = F)
irfr_tb3m_gs10_r2 = irf(var_r2, impulse = "tb3m", response = "gs10",  n.ahead = 12, ortho = F)
#Impulsos de dgs10
irfr_gs10_m1s_r2 = irf(var_r2, impulse = "gs10", response = "lm1s",  n.ahead = 12, ortho = F)
irfr_gs10_gnp_r2 = irf(var_r2, impulse = "gs10", response = "lgnp",  n.ahead = 12, ortho = F)
irfr_gs10_tb3m_r2 = irf(var_r2, impulse = "gs10", response = "tb3m",  n.ahead = 12, ortho = F)
irfr_gs10_r2 = irf(var_r2, impulse = "gs10", response = "gs10",  n.ahead = 12, ortho = F)
plot(irfr_m1s_r2)
plot(irfr_m1s_gnp_r2)
plot(irfr_m1s_tb3m_r2)
plot(irfr_m1s_gs10_r2)
plot(irfr_gnp_m1s_r2)
plot(irfr_gnp_r2)
plot(irfr_gnp_tb3m_r2)
plot(irfr_gnp_gs10_r2)
plot(irfr_tb3m_m1s_r2)
plot(irfr_tb3m_gnp_r2)
plot(irfr_tb3m_r2)
plot(irfr_tb3m_gs10_r2)
plot(irfr_tb3m_gs10_r2)
plot(irfr_tb3m_gs10_r2)
plot(irfr_m1s_r2)
plot(irfr_m1s_gnp_r2)
plot(irfr_m1s_tb3m_r2)
plot(irfr_m1s_gs10_r2)
plot(irfr_gnp_m1s_r2)
plot(irfr_gnp_r2)
plot(irfr_gnp_tb3m_r2)
plot(irfr_gnp_gs10_r2)
plot(irfr_tb3m_m1s_r2)
plot(irfr_tb3m_gnp_r2)
plot(irfr_tb3m_r2)
plot(irfr_tb3m_gs10_r2)
plot(irfr_gs10_m1s_r2)
plot(irfr_gs10_gnp_r2)
plot(irfr_gs10_tb3m_r2)
plot(irfr_gs10_r2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = F)
#Impulso desde tb3m
plot(irfr_tb3m_m1s_r2)
plot(irfr_tb3m_gnp_r2)
plot(irfr_tb3m_r2)
plot(irfr_tb3m_gs10_r2)
#Impulso desde gs10
plot(irfr_gs10_m1s_r2)
plot(irfr_gs10_gnp_r2)
plot(irfr_gs10_tb3m_r2)
plot(irfr_gs10_r2)
warnings()
